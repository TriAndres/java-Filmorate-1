DROP TABLE IF EXISTS PUBLIC."USER" CASCADE;
DROP TABLE IF EXISTS PUBLIC.FRIENDSHIP CASCADE;
DROP TABLE IF EXISTS PUBLIC.RATING CASCADE;
DROP TABLE IF EXISTS PUBLIC.FILM CASCADE;
DROP TABLE IF EXISTS PUBLIC.FILM_LIKE CASCADE;
DROP TABLE IF EXISTS PUBLIC.GENRE CASCADE;
DROP TABLE IF EXISTS PUBLIC.FILM_GENRE CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
    USER_ID INTEGER NOT NULL AUTO_INCREMENT,
    EMAIL CHARACTER VARYING(50) NOT NULL,
    LOGIN CHARACTER VARYING(30) NOT NULL,
    NAME CHARACTER VARYING(30) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
    USER_FIRST_ID INTEGER NOT NULL,
    USER_SECOND_ID INTEGER NOT NULL,
    CONSTRAINT FRIENDSHIP_FK FOREIGN KEY (USER_FIRST_ID) REFERENCES PUBLIC."USER"(USER_ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (USER_SECOND_ID) REFERENCES PUBLIC."USER"(USER_ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
    GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
    GENRE_NAME CHARACTER VARYING(20) NOT NULL,
    CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
    );

CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
    RATING_ID INTEGER NOT NULL AUTO_INCREMENT,
    RATING_NAME CHARACTER VARYING(10) NOT NULL,
    CONSTRAINT RATING_PK PRIMARY KEY (RATING_ID)
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
    FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME CHARACTER VARYING(30) NOT NULL,
    DESCRIPTION CHARACTER VARYING(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    RATING_ID INTEGER NOT NULL,
    CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
    CONSTRAINT FILM_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(RATING_ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKE (
    FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    CONSTRAINT FILM_LIKE_PK PRIMARY KEY (USER_ID,FILM_ID),
    CONSTRAINT FILM_LIKE_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FILM_LIKE_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
    FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILM_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID)
    ON DELETE CASCADE ON UPDATE CASCADE
    );